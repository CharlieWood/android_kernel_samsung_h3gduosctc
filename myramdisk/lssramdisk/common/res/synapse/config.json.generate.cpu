#!/system/bin/sh
MPS='0:"Disabled", 1:"1", 2:"2"'

cat << CTAG
{
    name:CPU,
    elements:[
	{ SLiveLabel:{
		refresh:2500,
		action:"show temp"
	}},
	{ SPane:{
		title:"CPU Governor"
	}},
	{ SOptionList:{
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`,
		action:"gov /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor",
		values:[`while read values; do busybox printf "%s, \n" $values; done < /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors`],
		notify:[
					{
						on:APPLY,
						do:[ REFRESH, CANCEL ],
						to:"/sys/devices/system/cpu/cpufreq"
					},
					{
						on:REFRESH,
						do:REFRESH,
						to:"/sys/devices/system/cpu/cpufreq"
					}
			]
	}},
	{ SPane:{
		title:" CPU Maximum Scaling Frequency"
	}},
	{ SSeekBar:{
		description:"Set Max CPU frequency and OC to 2803.2 MHz. Be careful, your device may reboot if if cannot handle OC! Default is 2265.6 MHz.",
		unit:" Mhz",
		weight:0.001,
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq`,
		action:"cpu /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq",
		values:[`while read values; do busybox printf "%s, \n" $values; done < /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies`]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:" CPU minimum Scaling Frequency",
	}},
	{ SSeekBar:{
		description:"Define the min frequency, the CPU should scale down to.",
		unit:" Mhz",
		weight:0.001,
		default:288000,
		action:"cpu /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq",
		values:[288000, 300000, 422400, 652800, 729600, 883200, 960000]
	}},
	{ SSpacer:{
		height:1
	}},
	{ STitleBar:{
                title:"Multicore Power Saving"
    }},
	{ SSeekBar:{
		description:"Try to group tasks into the least cores possible. The higher it is, the more the aggression will be.",
                default:`cat /sys/devices/system/cpu/sched_mc_power_savings`,
                action:"generic /sys/devices/system/cpu/sched_mc_power_savings",
		values:{
`
			echo $MPS
`
		}
	}},
	{ SPane:{
		title:"Governor tunables",
		description:"The various configuration items which are governor-dependent."
        }},
	{ SSpacer:{
		height:1
	}},
	{ STreeDescriptor:{
		path:"/sys/devices/system/cpu/cpufreq",
		generic: {
			directory: {
				STreeDescriptor:{
					generic: {
						directory: {},
						element: {
							SGeneric: { title:"@NAME" }
						}
					},
					matched: {
						elements: [
							{ "sampling_rate" : {
								SSeekBar: {
									title:"Sampling rate",
									description:"The sampling rate controls the frequency in which the governor polls for frequency changes.",
									min:50000, max:200000, step:10000, unit:" ms"
								}
							}}
						]
					},
					exclude: [
						"cpu_utilization",
						"boostpulse",
						"boost_mode",
						"mode",
						"boost_duration",
						"multi_phase_freq_tbl",
						"version_profiles",
						"version",
						"sleep_ideal_freq",
						"sleep_wakeup_freq",
						"awake_ideal_freq",
						"debug_mask",
						"down_rate_us",
						"cpu_util",
                                                "profile",
                                                "sampling_rate_current",
                                                "optimal_freq",
                                                "up_threshold_h",
                                                "up_threshold_l"
					]
				}
			}
		},
		exclude: [ "cpufreq_limit", "ondemand-sec", "iks-cpufreq" ]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"CPU Voltage Control",
		description:"Too low voltage may cause instability and freezes."
	}},
	{ SSeekBar:{
		title:"Set Global Under-Voltage",
		description:"Minimum undervolting is -40mV. WARNING: Too low voltage may cause instability issues!",
		max:0,
		min:-40,
		unit:" mV",
		step:5,
		default:`echo $(/res/synapse/actions/default vread)`,
		action:"default vwrite"
	}},
	{ SPane:{
		title:"Voltage Info",
	}},
	{ SButton:{
		label:"Show Voltage Table",
		action:"show cpu"
	}},
	{ SButton:{
		label:"Show Voltage soc_pvs",
		action:"show speedbin"
	}},
    ]
}
CTAG
